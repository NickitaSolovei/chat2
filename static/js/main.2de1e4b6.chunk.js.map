{"version":3,"sources":["components/main.module.css","actions/chat.js","containers/Chat.js","components/Header/Header.js","components/Header/index.js","actionTypes/chat.js","App.js","reducers/chat.js","reducers/allReducers.js","index.js"],"names":["module","exports","myClass","height100","fullscreen","headerClass","mainMessage","messages","wrapmessages","headerMessages","messageBottom","messageContainer","messageFirstLine","messageFrom","messageTime","messageSecondLine","__webpack_require__","d","__webpack_exports__","onChatMessagesReceived","onChatOnline","onChatOffline","_actionTypes_chat__WEBPACK_IMPORTED_MODULE_0__","data","type","ON_CHAT_MESSAGES_RECEIVED","payload","ON_CHAT_ONLINE","paload","ON_CHAT_OFFLINE","Chat","props","_this","Object","C_Users_Nick_Desktop_RStrain_TaskChatWithReact_trainBundle6_chat2_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Nick_Desktop_RStrain_TaskChatWithReact_trainBundle6_chat2_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Nick_Desktop_RStrain_TaskChatWithReact_trainBundle6_chat2_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","getUserNameFromLocalStorage","localStorage","getItem","scrollToBottom","messagesEnd","scrollIntoView","inputRef","React","createRef","userNameRef","_this2","document","addEventListener","Notification","permission","requestPermission","alert","startSocket","socket","WebSocket","global","SSS","onmessage","event","message","JSON","parse","hidden","from","body","notifyMe","length","onclose","setTimeout","mes","current","value","send","stringify","_this3","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","className","styles","_components_Header__WEBPACK_IMPORTED_MODULE_8__","isOnline","chat","isChatOnline","id","map","el","timeFormat","Date","time","toTimeString","replace","style","float","clear","ref","onKeyPress","e","key","sendMessageToServer","Component","connect","state","dispatch","Header_Header","_ref","onNameChange","react_default","onChange","Header","classCallCheck","possibleConstructorReturn","getPrototypeOf","getNameFromLocalStorage","userName","setItem","assign","shared","App","initialState","allReducers","combineReducers","arguments","undefined","action","newState","_objectSpread","concat","reverse","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.2de1e4b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"myClass\":\"main_myClass__3HCf2\",\"height100\":\"main_height100__2rAaa\",\"fullscreen\":\"main_fullscreen__ac_eV\",\"headerClass\":\"main_headerClass__1OiAI\",\"mainMessage\":\"main_mainMessage__26Vhd\",\"messages\":\"main_messages__2hh1n\",\"wrapmessages\":\"main_wrapmessages__2AxGa\",\"headerMessages\":\"main_headerMessages__38NGU\",\"messageBottom\":\"main_messageBottom__1Ab_Y\",\"messageContainer\":\"main_messageContainer__2Ks6O\",\"messageFirstLine\":\"main_messageFirstLine__3f4nf\",\"messageFrom\":\"main_messageFrom__3oc_R\",\"messageTime\":\"main_messageTime__EuRJ8\",\"messageSecondLine\":\"main_messageSecondLine__22Ol-\"};","import { ON_CHAT_MESSAGES_RECEIVED, ON_CHAT_ONLINE, ON_CHAT_OFFLINE} from '../actionTypes/chat';\n\nexport const onChatMessagesReceived = (data) => ({\n  type: ON_CHAT_MESSAGES_RECEIVED,\n  payload: data,\n});\n\nexport const onChatOnline = (data) => ({\n  type: ON_CHAT_ONLINE,\n  paload: data,\n});\n\nexport const onChatOffline = (data) => ({\n  type: ON_CHAT_OFFLINE,\n  paload: data,\n});\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport { onChatMessagesReceived, onChatOnline, onChatOffline } from '../actions/chat';\nimport Header from '../components/Header';\n\nimport styles from '../components/main.module.css';\n\n\nclass Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    this.userNameRef = React.createRef();\n  }\n\n  componentDidMount() {\n    document.addEventListener('DOMContentLoaded', () => {\n      if (!Notification) {\n        alert('Desktop notifications not available in your browser. Try Chromium.');\n        return;\n      }\n\n      if (Notification.permission !== 'granted') { Notification.requestPermission(); }\n    });\n\n\n    function notifyMe(data) {\n      if (Notification.permission !== 'granted') { Notification.requestPermission(); } else if (document.hidden) {\n        // eslint-disable-next-line no-new\n        new Notification(data.from, {\n          body: data.message,\n        });\n      }\n    }\n\n    const startSocket = () => {\n      this.socket = new WebSocket('ws://st-chat.shas.tel');\n      this.props.onChatOnline();\n      global.SSS = this.socket;\n\n      this.socket.onmessage = (event) => {\n        const message = event.data;\n        const data = JSON.parse(message);\n        this.props.onChatMessagesReceived(data);\n        notifyMe(data[data.length - 1]);\n      };\n      this.socket.onclose = () => {\n        this.props.onChatOffline();\n        setTimeout(() => { startSocket(); }, 5000);\n      };\n    };\n    startSocket();\n\n\n    this.scrollToBottom();\n  }\n\n  sendMessageToServer() {\n    const mes = {message: this.inputRef.current.value, from: this.getUserNameFromLocalStorage()};\n    this.socket.send(JSON.stringify(mes));\n  }\n\n    getUserNameFromLocalStorage = () => localStorage.getItem('userName');\n\n    scrollToBottom = () => {\n      this.messagesEnd.scrollIntoView();\n    }\n\n    componentDidUpdate() {\n      this.scrollToBottom();\n    }\n\n    render() {\n      return (\n        <>\n          <div className={styles.fullscreen}>\n            <Header\n              className={styles.headerClass}\n              isOnline={this.props.chat.isChatOnline}\n              getUserNameFromLocalStorage={this.getUserNameFromLocalStorage}\n              userNameRef={this.userNameRef}\n            />\n\n            <div className={styles.wrapmessages}>\n              <div className={styles.messages} id=\"messages\">\n                <div className={styles.headerMessages}>\n                  {this.props.chat.messages.map((el) => {\n                    const timeFormat = new Date(el.time).toTimeString().replace(/ .*/, '');\n                    return (\n                      <div className={styles.messageContainer}>\n                        <div className={styles.messageFirstLine}>\n                          <div className={styles.messageFrom}>{el.from}</div>\n                          <div className={styles.messageTime}>{timeFormat}</div>\n                        </div>\n                        <div className={styles.messageSecondLine}>{el.message}</div>\n                      </div>\n                    );\n                  })}\n\n                  <div\n                    style={{ float: 'left', clear: 'both' }}\n                    ref={(el) => { this.messagesEnd = el; }}\n                  />\n\n                </div>\n              </div>\n              <input\n                className={styles.messageBottom}\n                onKeyPress={(e) => {\n                  if (e.key === 'Enter') {\n                    this.sendMessageToServer();\n                    this.inputRef.current.value = '';\n                  }\n                }}\n                type=\"text\"\n                ref={this.inputRef}\n              />\n            </div>\n          </div>\n        </>\n      );\n    }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    chat: state.chat,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onChatMessagesReceived: (data) => dispatch(onChatMessagesReceived(data)),\n    onChatOnline: (data) => dispatch(onChatOnline(data)),\n    onChatOffline: (data) => dispatch(onChatOffline(data)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\n","import React from 'react';\n\nexport default ({inputRef, onNameChange, isOnline}) => {\n\n  return (\n    <div className=\"header\">\n      <div>\n        {isOnline ? <span>***ONLINE***</span> : <span>***WARNING!! OFFLINE***    </span>}\n        <span>YOUR NAME:</span>\n        <input\n          type=\"text\"\n          onChange={() => {\n            onNameChange();\n          }}\n          ref={inputRef}\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport HeaderComponent from './Header';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n  }\n\n\n  componentDidMount() {\n    this.getNameFromLocalStorage();\n  }\n\n  getNameFromLocalStorage = () => {\n    const userName = this.props.getUserNameFromLocalStorage();\n    this.inputRef.current.value = userName;\n  }\n\n  onNameChange = () => {\n    localStorage.setItem('userName', this.inputRef.current.value);\n  }\n\n  render() {\n    return (\n      <HeaderComponent\n        onNameChange={this.onNameChange}\n        inputRef={this.inputRef}\n        {...this.props}\n      />\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  shared: state.shared,\n});\n\nconst mapDispatchToProps = () => ({\n\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","export const ON_CHAT_MESSAGES_RECEIVED = 'ON_CHAT_MESSAGES_RECEIVED';\nexport const ON_CHAT_ONLINE = 'ON_CHAT_ONLINE';\nexport const ON_CHAT_OFFLINE = 'ON_CHAT_OFFLINE';\n","import React from 'react';\n\nimport Chat from './containers/Chat';\n\nfunction App() {\n  return (\n    <>\n      <Chat />\n    </>\n  );\n}\n\nexport default App;\n","import { ON_CHAT_MESSAGES_RECEIVED, ON_CHAT_ONLINE, ON_CHAT_OFFLINE } from '../actionTypes/chat';\n\nconst initialState = {\n  messages: [],\n  isChatOnline: false,\n};\n\n\nexport default function chat(state = initialState, action) {\n  switch (action.type) {\n  case ON_CHAT_MESSAGES_RECEIVED: {\n    const newState = { ...state};\n    // newState.messages = newState.messages.concat(action.payload);\n    newState.messages = newState.messages.concat(action.payload.reverse());\n    return newState;\n  }\n  case ON_CHAT_ONLINE: {\n    const newState = { ...state};\n    newState.messages = [];\n    newState.isChatOnline = true;\n    return newState;\n  }\n  case ON_CHAT_OFFLINE: {\n    const newState = { ...state};\n    newState.isChatOnline = false;\n    return newState;\n  }\n  default:\n    return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport chat from './chat';\n\nconst allReducers = combineReducers({\n  chat,\n});\n\nexport default allReducers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles.css';\n\n\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport App from './App';\nimport allReducers from './reducers/allReducers';\n\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}